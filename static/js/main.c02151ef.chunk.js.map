{"version":3,"sources":["utils/validate/valid.module.css","components/common/Preloader/Preloader.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Users/Users.module.css","components/Settings/Settings.tsx","components/Music/Music.tsx","components/News/News.tsx","redux/dialogsPageReducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Mesage.tsx","utils/validate/Validate.tsx","utils/validate/validators.ts","components/Dialogs/Dialogs.tsx","components/HOC/AuthRedirectComponent.tsx","components/Dialogs/DialogsContainer.tsx","api/api.tsx","redux/usersPageReducer.ts","assets/images/ava.jpg","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","components/Users/UsersContainer.tsx","redux/profilePageReducer.ts","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/NavBar/Navbar.tsx","components/Header/Status/Status.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/appReduce.ts","App.tsx","reportWebVitals.js","redux/store.ts","index.tsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/NavBar/Navbar.module.css","components/Login/Login.module.css"],"names":["module","exports","Settings","Music","News","initialState","dialogs","id","name","messages","message","DialogItem","props","className","classes","dialog","active","imgWrapper","src","alt","to","Message","FormValidation","input","meta","child","hasError","touched","error","s","children","Input","restProps","Textarea","required","value","maxLength","length","Dialogs","dialogsElement","dialogsPage","map","d","messagesElements","m","contentWrapper","dialogsItems","AddMessagesForm","onSubmit","sendMessageCreator","newMessage","reduxForm","form","handleSubmit","Field","component","validate","placeholder","mapStateForAuth","state","isAuth","auth","AuthRedirectComponent","Component","connect","compose","type","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","delete","post","authAPI","res","email","password","rememberMe","profileAPI","status","put","users","totalUsersCount","isFetching","followingInProgress","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","Users","onPageChanged","onFollow","onUnfollow","pagesCount","Math","ceil","useState","pages","setPages","useEffect","arr","i","styles","users_container","u","user_wrap","ava_title","user_avatar","avatar","photos","small","userPhoto","followed","btn","disabled","some","onClick","pagination","p","index","selectedPage","Preloader","loading","loading_text","loading_text_words","UsersContainer","pageNumber","getUsers","followThunk","unfollowThunk","this","userPage","React","usersPage","dispatch","console","log","resultCode","follow","unfollow","items","totalCount","posts","likesCount","profile","setUserProfileCreator","setStatus","Post","post_wrap","post_header","ava","titles","likes","messageContent","maxlength","MyPosts","postsElements","postsBlock","add_post","AddPostForm","addPostCreator","newPostText","textarea_wrap","MyPostsContainer","profilePage","Profile","ProfileContainer","match","params","authoraizedUserId","getProfile","getStatus","withRouter","Navbar","nav","activeClassName","activeLink","Status","editMode","setEditMode","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","onDoubleClick","add_status","status_class","Header","header_wrap","header","ava_wrap","large","defaultAvatar","fullName","aboutMe","loginBlock","login","logout","logoutBtn","setAuthUserData","payload","authThunk","HeaderContainer","logoutThunk","catch","maxSymbols","LoginFormRedux","form_error","common_error","loginThunk","stopSubmit","_error","login_container","formData","pass","initialazed","App","initialazedThunk","path","render","DialogsContainer","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newPost","Date","getTime","body","filter","formReducer","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c02151ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"valid_error__1-7Gq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__3-_pZ\",\"loading_text\":\"Preloader_loading_text__GOrfd\",\"blur-text\":\"Preloader_blur-text__1dlWq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__39urj\",\"contentWrapper\":\"Dialogs_contentWrapper__2shay\",\"dialogsItems\":\"Dialogs_dialogsItems__IPfAH\",\"active\":\"Dialogs_active__2AYph\",\"dialog\":\"Dialogs_dialog__3DvQE\",\"messages\":\"Dialogs_messages__2mmFp\",\"imgWrapper\":\"Dialogs_imgWrapper__1kiIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrap\":\"Header_header_wrap__1uAbL\",\"header\":\"Header_header__3g0ly\",\"loginBlock\":\"Header_loginBlock__h_qvi\",\"ava_wrap\":\"Header_ava_wrap__FrNzJ\",\"ava\":\"Header_ava__Nrzyk\",\"login\":\"Header_login__HKRGB\",\"status_class\":\"Header_status_class__1Tbva\",\"add_status\":\"Header_add_status__1hiD8\",\"logoutBtn\":\"Header_logoutBtn__2uR2i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Users_pagination__3384N\",\"selectedPage\":\"Users_selectedPage__3gIOI\",\"users_container\":\"Users_users_container__1EMQK\",\"user_wrap\":\"Users_user_wrap__2zgYS\",\"ava_title\":\"Users_ava_title__3rpWD\",\"user_avatar\":\"Users_user_avatar__1YmKU\",\"btn\":\"Users_btn__3B_4z\"};","import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\n\r\n\r\nconst Settings = () =>{\r\n    return(\r\n        <div>settings</div>\r\n    )\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\n\r\n\r\nconst Music = () =>{\r\n    return(\r\n        <div>Music</div>\r\n    )\r\n}\r\nexport default Music;","import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\n\r\n\r\nconst News = () =>{\r\n    return(\r\n        <div>News</div>\r\n    )\r\n}\r\nexport default News;","import { DialogPageType } from \"./types\";\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: \"Pasha\" },\r\n    { id: 2, name: \"Sasha\" },\r\n    { id: 3, name: \"Alexej\" },\r\n    { id: 4, name: \"Dima\" },\r\n    { id: 5, name: \"Shizofreniya\" },\r\n    { id: 6, name: \"freedom_Belarus\" },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How r u\" },\r\n    { id: 3, message: \"What is ur name\" },\r\n    { id: 4, message: \"Любишь пёсиков? =)\" },\r\n    { id: 5, message: \"London is a capital of great Britain\" },\r\n    { id: 6, message: \"Live Belarus!\" },\r\n  ],\r\n};\r\n\r\nexport const dialogsPageReducer = (state: DialogPageType = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case \"SEND_MESSAGE\": {\r\n      let body = action.newMessage;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: state.messages.length + 1, message: body }],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype ActionsType = ReturnType<typeof sendMessageCreator>;\r\n\r\nexport const sendMessageCreator = (newMessage: string) => {\r\n  return {\r\n    type: \"SEND_MESSAGE\",\r\n    newMessage,\r\n  } as const;\r\n};\r\n","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem = (props: propsType) => {\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <div className={classes.imgWrapper}>\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6ihdk3wfyxmK6F0KYZeZ3D5H96vo74e1LSg&usqp=CAU\" alt=\"\"/>\r\n            </div>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\ntype propsType = {\r\n    message : string\r\n}\r\n\r\nconst Message = (props: propsType) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import s from \"./valid.module.css\";\r\n\r\nexport const FormValidation = ({ input, meta, child, ...props }: any) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={hasError ? s.error : \"\"}>\r\n      {props.children}\r\n      {hasError && <p>{meta.error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props: any) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormValidation {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormValidation>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props: any) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormValidation {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormValidation>\r\n  );\r\n};\r\n","export const required = (value: any) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLength = (maxLength: any) => (value: any) => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React, { ChangeEvent } from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Mesage\";\r\nimport { DialogPageType } from \"../../redux/types\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../utils/validate/Validate\";\r\nimport { required } from \"../../utils/validate/validators\";\r\n\r\ntype PropsType = {\r\n  dialogsPage: DialogPageType;\r\n  sendMessageCreator: (newMessage: string) => void;\r\n};\r\n\r\n// const maxLength = maxLength(10);\r\n\r\nconst Dialogs = (props: PropsType) => {\r\n  const dialogsElement = props.dialogsPage.dialogs.map((d) => <DialogItem name={d.name} id={d.id} key={d.id} />);\r\n  const messagesElements = props.dialogsPage.messages.map((m) => <Message message={m.message} key={m.id} />);\r\n\r\n  const onSubmit = (value: any) => {\r\n    props.sendMessageCreator(value.newMessage);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.contentWrapper}>\r\n        <div className={classes.dialogsItems}>{dialogsElement}</div>\r\n        <div className={classes.messages}>\r\n          <div>{messagesElements}</div>\r\n          <AddMessagesForm onSubmit={onSubmit} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n\r\nconst AddMessages = (props: any) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name='newMessage' component={Textarea} validate={[required]} placeholder='type message' />\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessagesForm = reduxForm({\r\n  form: \"addMessage\",\r\n})(AddMessages);\r\n","import React from \"react\";\r\nimport { ComponentType } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { RootReduxState } from \"../../redux/store\";\r\n\r\ntype mapStateType = {\r\n  isAuth: boolean;\r\n};\r\n\r\nlet mapStateForAuth = (state: RootReduxState): mapStateType => {\r\n  return { isAuth: state.auth.isAuth };\r\n};\r\n\r\nexport function AuthRedirectComponent<T>(Component: ComponentType<T>) {\r\n  const RedirectComponent = (props: mapStateType) => {\r\n    let { isAuth, ...restProps } = props;\r\n    return !props.isAuth ? <Redirect to={\"/login\"} /> : <Component {...(restProps as T)} />;\r\n  };\r\n\r\n  let ConnetedAuthRedirectComponent = connect(mapStateForAuth)(RedirectComponent);\r\n\r\n  return ConnetedAuthRedirectComponent;\r\n}\r\n","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../redux/dialogsPageReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose, Dispatch } from \"redux\";\r\nimport { AppStateType } from \"../../redux/types\";\r\nimport { AuthRedirectComponent } from \"../HOC/AuthRedirectComponent\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { sendMessageCreator }),\r\n  AuthRedirectComponent\r\n)(Dialogs);\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-Key\": \"94c9f385-f2db-498c-b99f-a10b7cce6547\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  unFollow(userId: number) {\r\n    return instance.delete(`follow/${userId}`, {}).then((response) => {\r\n      return response;\r\n    });\r\n  },\r\n\r\n  follow(userId: number) {\r\n    return instance.post(`follow/${userId}`, {}).then((response) => {\r\n      return response;\r\n    });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  getAuth() {\r\n    return instance.get(`auth/me`).then((res) => res);\r\n  },\r\n\r\n  logIn(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe }).then((res) => {\r\n      return res.data;\r\n    });\r\n  },\r\n\r\n  logOut() {\r\n    return instance.delete(`auth/login`).then((res) => {\r\n      return res.data;\r\n    });\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: string) {\r\n    return instance.get(`profile/` + userId).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  getStatus(userId: string) {\r\n    return instance.get(`profile/status/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  updateStatus(status: string) {\r\n    return instance.put(`profile/status`, { status: status }).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { UserType } from \"./types\";\r\n\r\nlet initialState = {\r\n  users: [] as Array<UserType>,\r\n  pageSize: 15,\r\n  totalUsersCount: 500,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [0],\r\n};\r\ntype InitialType = typeof initialState;\r\n\r\nexport const usersPageReducer = (state: InitialType = initialState, action: ActionsType): InitialType => {\r\n  switch (action.type) {\r\n    case \"FOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u: any) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case \"UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u: any) => {\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case \"SET_USERS\":\r\n      return { ...state, users: action.users };\r\n\r\n    case \"SET_CURRENT_PAGE\":\r\n      return { ...state, currentPage: action.currentPage };\r\n\r\n    case \"SET_TOTAL_COUNT\":\r\n      return { ...state, totalUsersCount: action.totalUsersCount };\r\n    default:\r\n      return state;\r\n\r\n    case \"TOGGLE_IS_FETCHING\":\r\n      return { ...state, isFetching: action.isFetching };\r\n\r\n    case \"TOGGLE_IS_FOLLOWING_PROGRESS\":\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n  }\r\n};\r\ntype ActionsType =\r\n  | ReturnType<typeof follow>\r\n  | ReturnType<typeof unfollow>\r\n  | ReturnType<typeof setUsers>\r\n  | ReturnType<typeof setCurrentPage>\r\n  | ReturnType<typeof setTotalUsersCount>\r\n  | ReturnType<typeof toggleIsFetching>\r\n  | ReturnType<typeof toggleFollowingInProgress>;\r\n\r\nexport const follow = (userId: number) => ({ type: \"FOLLOW\", userId } as const);\r\n\r\nexport const unfollow = (userId: number) => {\r\n  return {\r\n    type: \"UNFOLLOW\",\r\n    userId,\r\n  } as const;\r\n};\r\nexport const setUsers = (users: UserType[]) => {\r\n  return {\r\n    type: \"SET_USERS\",\r\n    users,\r\n  } as const;\r\n};\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n  return {\r\n    type: \"SET_CURRENT_PAGE\",\r\n    currentPage,\r\n  } as const;\r\n};\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number) =>\r\n  ({\r\n    type: \"SET_TOTAL_COUNT\",\r\n    totalUsersCount,\r\n  } as const);\r\n\r\n  export const toggleIsFetching = (isFetching: boolean) =>\r\n    ({\r\n      type: \"TOGGLE_IS_FETCHING\",\r\n      isFetching,\r\n    } as const);\r\n\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) =>\r\n  ({\r\n    type: \"TOGGLE_IS_FOLLOWING_PROGRESS\",\r\n    isFetching,\r\n    userId,\r\n  } as const);\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: any) => {\r\n  dispatch(toggleIsFetching(true));\r\n  usersAPI.getUsers(currentPage, pageSize).then((data) => {\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  });\r\n};\r\n\r\nexport const unfollowThunk = (userId: number) => (dispatch: any) => {\r\n  dispatch(toggleFollowingInProgress(true, userId));\r\n  usersAPI.unFollow(userId).then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(unfollow(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n  });\r\n};\r\n\r\nexport const followThunk = (userId: number) => (dispatch: any) => {\r\n  console.log(userId);\r\n  dispatch(toggleFollowingInProgress(true, userId));\r\n  usersAPI.follow(userId).then((response) => {\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(follow(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n  });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/ava.c55027c6.jpg\";","import React, { FC, useEffect, useState } from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/ava.jpg\";\r\nimport { UserType } from \"../../redux/types\";\r\n\r\ntype UsersPageType = {\r\n  totalUsersCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onPageChanged: (pageNumber: number) => void;\r\n  users: UserType[];\r\n  onFollow: (userId: number) => void;\r\n  onUnfollow: (userId: number) => void;\r\n  followingInProgress: Array<number>;\r\n  toggleFollowingInProgress: (isFetching: boolean, userId: number) => void;\r\n};\r\n\r\nexport const Users: FC<UsersPageType> = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  users,\r\n  onFollow,\r\n  onUnfollow,\r\n  followingInProgress,\r\n  toggleFollowingInProgress,\r\n}) => {\r\n  const pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n  const [pages, setPages] = useState<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (currentPage <= 10 && currentPage <= pagesCount - 10) {\r\n      let arr: number[] = [];\r\n      for (let i = 1; i <= 20; i++) {\r\n        arr = [...arr, i];\r\n      }\r\n      setPages(arr);\r\n    } else if (currentPage <= 10 && currentPage <= pagesCount) {\r\n      let arr: number[] = [];\r\n      for (let i = 1; i <= pagesCount; i++) {\r\n        arr = [...arr, i];\r\n      }\r\n      setPages(arr);\r\n    } else if (currentPage >= 10 && currentPage <= pagesCount - 10) {\r\n      let arr: number[] = [];\r\n      for (let i = currentPage - 10; i <= currentPage + 9; i++) {\r\n        arr = [...arr, i];\r\n      }\r\n      setPages(arr);\r\n    } else if (currentPage >= 10 && currentPage <= pagesCount) {\r\n      let arr: number[] = [];\r\n      for (let i = pagesCount - 19; i <= pagesCount; i++) {\r\n        arr = [...arr, i];\r\n      }\r\n      setPages(arr);\r\n    }\r\n  }, [currentPage, pagesCount]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.users_container}>\r\n        {users.map((u) => (\r\n          <div key={u.id} className={styles.user_wrap}>\r\n            <div className={styles.ava_title}>\r\n              <div className={styles.user_avatar}>\r\n                <NavLink to={\"/profile/\" + u.id}>\r\n                  <img\r\n                    className={styles.avatar}\r\n                    src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                    alt=\"smile\"\r\n                  />\r\n                </NavLink>\r\n              </div>\r\n              <p>{u.name}</p>\r\n            </div>\r\n\r\n            <div>\r\n              {u.followed ? (\r\n                <button\r\n                  className={styles.btn}\r\n                  disabled={followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => {\r\n                    onUnfollow(u.id);\r\n                  }}\r\n                >\r\n                  unfollow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className={styles.btn}\r\n                  disabled={followingInProgress.some((id) => id === u.id)}\r\n                  onClick={() => onFollow(u.id)}\r\n                >\r\n                  follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className={styles.pagination}>\r\n        {pages.map((p: number, index: number) => {\r\n          return (\r\n            <span\r\n              key={index}\r\n              className={currentPage === p ? styles.selectedPage : \"\"}\r\n              onClick={() => {\r\n                onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import preloader_spinner from \"../../../assets/images/preloader_spinner.svg\";\r\nimport React from \"react\";\r\nimport s from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <>\r\n      <div className={s.loading}>\r\n        <div className={s.loading_text}>\r\n          <span className={s.loading_text_words}>L</span>\r\n          <span className={s.loading_text_words}>O</span>\r\n          <span className={s.loading_text_words}>A</span>\r\n          <span className={s.loading_text_words}>D</span>\r\n          <span className={s.loading_text_words}>I</span>\r\n          <span className={s.loading_text_words}>N</span>\r\n          <span className={s.loading_text_words}>G</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* --------- second --------------- */}\r\n      {/* <div className={s.preloader__wrap}>\r\n      <div className={s.preloader}>\r\n        <div className={s.preloader__ring}>\r\n          <div className={s.preloader__sector}>L</div>\r\n          <div className={s.preloader__sector}>o</div>\r\n          <div className={s.preloader__sector}>a</div>\r\n          <div className={s.preloader__sector}>d</div>\r\n          <div className={s.preloader__sector}>i</div>\r\n          <div className={s.preloader__sector}>n</div>\r\n          <div className={s.preloader__sector}>g</div>\r\n          <div className={s.preloader__sector}>.</div>\r\n          <div className={s.preloader__sector}>.</div>\r\n          <div className={s.preloader__sector}>.</div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n        </div>\r\n        <div className={s.preloader__ring}>\r\n          <div className={s.preloader__sector}>L</div>\r\n          <div className={s.preloader__sector}>o</div>\r\n          <div className={s.preloader__sector}>a</div>\r\n          <div className={s.preloader__sector}>d</div>\r\n          <div className={s.preloader__sector}>i</div>\r\n          <div className={s.preloader__sector}>n</div>\r\n          <div className={s.preloader__sector}>g</div>\r\n          <div className={s.preloader__sector}>.</div>\r\n          <div className={s.preloader__sector}>.</div>\r\n          <div className={s.preloader__sector}>.</div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n          <div className={s.preloader__sector}></div>\r\n        </div>\r\n      </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsers, setCurrentPage, toggleFollowingInProgress } from \"../../redux/usersPageReducer\";\r\nimport { Users } from \"./Users\";\r\nimport { Preloader } from \"../common/Preloader/Preloader\";\r\nimport { RootReduxState } from \"../../redux/store\";\r\nimport { UsersPageType } from \"../../redux/types\";\r\nimport { followThunk, unfollowThunk } from \"./../../redux/usersPageReducer\";\r\nimport { compose } from \"redux\";\r\nimport { AuthRedirectComponent } from \"../HOC/AuthRedirectComponent\";\r\n\r\ntype MSTPropsType = {\r\n  userPage: UsersPageType;\r\n  pageSize: number;\r\n  totalUsersCount: number;\r\n  currentPage: number;\r\n  isFetching: boolean;\r\n  followingInProgress: Array<number>;\r\n};\r\n\r\ntype MDTPropsType = {\r\n  followThunk: (userId: number) => void;\r\n  unfollowThunk: (userId: number) => void;\r\n  setCurrentPage: (currentPage: number) => void;\r\n  toggleFollowingInProgress: (isFetching: boolean, userId: number) => void;\r\n  getUsers: (currentPage: number, pageSize: number) => void;\r\n};\r\n\r\nexport type UsersPropsType = MSTPropsType & MDTPropsType;\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  };\r\n\r\n  onFollow = (id: number) => {\r\n    this.props.followThunk(id);\r\n  };\r\n\r\n  onUnfollow = (id: number) => {\r\n    this.props.unfollowThunk(id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.userPage.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.userPage.users}\r\n          onFollow={this.onFollow}\r\n          onUnfollow={this.onUnfollow}\r\n          followingInProgress={this.props.followingInProgress}\r\n          onPageChanged={this.onPageChanged}\r\n          toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxState): MSTPropsType => {\r\n  return {\r\n    userPage: state.usersPage,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress,\r\n  };\r\n};\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {\r\n    followThunk,\r\n    unfollowThunk,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    getUsers,\r\n  }),\r\n  AuthRedirectComponent\r\n)(UsersContainer);\r\n","import { profileAPI } from \"../api/api\";\r\n\r\ntype ActionsType =\r\n  | ReturnType<typeof addPostCreator>\r\n  | ReturnType<typeof setUserProfileCreator>\r\n  | ReturnType<typeof setStatus>;\r\n\r\nexport type InitialProfileStateType = {\r\n  posts: Array<PostType>;\r\n  profile: ProfileResponseType | null;\r\n  status: string;\r\n};\r\n\r\nexport type PostType = {\r\n  id: number;\r\n  message: string;\r\n  likesCount: number;\r\n};\r\n\r\nexport type ProfileResponseType = {\r\n  aboutMe: string;\r\n  contacts: {\r\n    facebook: string;\r\n    github: string;\r\n    instagram: string;\r\n    mainLink: string;\r\n    twitter: string;\r\n    vk: string;\r\n    website: string;\r\n    youtube: string;\r\n  };\r\n  fullName: string;\r\n  lookingForAJob: boolean;\r\n  lookingForAJobDescription: string;\r\n  photos: {\r\n    large: string;\r\n    small: string;\r\n  };\r\n  userId: number | string;\r\n};\r\n\r\nlet initialState: InitialProfileStateType = {\r\n  posts: [\r\n    { id: 1, message: \"Hi\", likesCount: 3 },\r\n    { id: 2, message: \"How r u\", likesCount: 5 },\r\n    { id: 3, message: \"it's my first post\", likesCount: 13 },\r\n    { id: 4, message: \"Любишь пёсиков? =)\", likesCount: 33 },\r\n    { id: 5, message: \"London is a capital of great Britain\", likesCount: 7 },\r\n    { id: 6, message: \"Live Belarus!\", likesCount: 345 },\r\n  ],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nexport const profilePageReducer = (\r\n  state: InitialProfileStateType = initialState,\r\n  action: ActionsType\r\n): InitialProfileStateType => {\r\n  switch (action.type) {\r\n    case \"ADD_POST\": {\r\n      const newPost: PostType = {\r\n        id: new Date().getTime(),\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [newPost, ...state.posts],\r\n      };\r\n    }\r\n\r\n    case \"SET_USER_PROFILE\": {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n\r\n    case \"SET_STATUS\": {\r\n      return { ...state, status: action.status };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostCreator = (newPostText: string) => {\r\n  return {\r\n    type: \"ADD_POST\",\r\n    newPostText: newPostText,\r\n  } as const;\r\n};\r\n\r\nexport const setUserProfileCreator = (profile: ProfileResponseType) => {\r\n  return {\r\n    type: \"SET_USER_PROFILE\",\r\n    profile,\r\n  } as const;\r\n};\r\n\r\nexport const setStatus = (status: string) => {\r\n  return {\r\n    type: \"SET_STATUS\",\r\n    status,\r\n  } as const;\r\n};\r\n\r\nexport const getProfile = (userId: string) => (dispatch: any) => {\r\n  profileAPI.getProfile(userId).then((data) => {\r\n    dispatch(setUserProfileCreator(data));\r\n  });\r\n};\r\n\r\nexport const getStatus = (userId: string) => (dispatch: any) => {\r\n  profileAPI.getStatus(userId).then((data) => {\r\n    dispatch(setStatus(data));\r\n  });\r\n};\r\n\r\nexport const updateStatus = (status: string) => (dispatch: any) => {\r\n  profileAPI\r\n    .updateStatus(status)\r\n    .then((res) => {\r\n      if (res.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n      }\r\n    })\r\n    .catch((e) => console.log(e));\r\n};\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport ava from \"../../../../assets/images/ava.jpg\";\r\n\r\ntype PropsType = {\r\n  message: string;\r\n  likesCount: number;\r\n};\r\n\r\nconst Post = (props: PropsType) => {\r\n  return (\r\n    <div className={classes.post_wrap}>\r\n      <div className={classes.post_header}>\r\n        <div className={classes.imgWrapper}>\r\n          <img src={ava} alt=\"Jang\" />\r\n          <div className={classes.titles}>\r\n            <h4>Full Name</h4>\r\n            <span>22 апр. 2021г</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.likes}>\r\n          <i>&hearts;</i>\r\n          {props.likesCount}\r\n        </div>\r\n      </div>\r\n\r\n      <p className={classes.messageContent}>{props.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { ChangeEvent, KeyboardEventHandler } from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { PostType } from \"../../../redux/types\";\r\nimport ava from \"../../../assets/images/ava.jpg\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../utils/validate/Validate\";\r\nimport { maxLength, required } from \"../../../utils/validate/validators\";\r\n\r\ntype PropsType = {\r\n  posts: PostType[];\r\n  addPostCreator: (newPostText: string) => void;\r\n};\r\n\r\nconst maxlength = maxLength(10);\r\n\r\nconst MyPosts = (props: PropsType) => {\r\n  const postsElements = props.posts.map((p) => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n  const addPost = (value: any) => {\r\n    props.addPostCreator(value.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <div className={classes.add_post}>\r\n        <img src={ava} />\r\n        <AddPostForm onSubmit={addPost} />\r\n      </div>\r\n      <div className={classes.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n\r\nconst AddPost = (props: any) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={classes.form}>\r\n      <div className={classes.textarea_wrap}>\r\n        <Field name='newPostText' component={Textarea} validate={[required, maxlength]} placeholder='type message' />\r\n      </div>\r\n      <div>\r\n        <button className={classes.btn}>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddPostForm = reduxForm({\r\n  form: \"addPost\",\r\n})(AddPost);\r\n","import { addPostCreator } from \"../../../redux/profilePageReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AppStateType } from \"../../../redux/types\";\r\n\r\nlet mapStateProps = (state: AppStateType) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateProps, { addPostCreator })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { ProfileResponseType } from \"../../redux/types\";\r\n\r\ntype ProfilePropsType = {\r\n  profile: ProfileResponseType | null;\r\n};\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n  return (\r\n    <div>\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfile, getStatus, ProfileResponseType, setUserProfileCreator } from \"../../redux/profilePageReducer\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { RootReduxState } from \"../../redux/store\";\r\nimport { AuthRedirectComponent } from \"../HOC/AuthRedirectComponent\";\r\nimport { compose } from \"redux\";\r\n\r\nexport type ProfileMapStateToPropsType = {\r\n  profile: ProfileResponseType | null;\r\n  authoraizedUserId: number | null;\r\n  isAuth: boolean;\r\n};\r\n\r\ntype RouteType = {\r\n  userId: any;\r\n};\r\n\r\ntype ProfileMapDispatchToPropsType = {\r\n  setUserProfileCreator: (profile: ProfileResponseType) => void;\r\n  getProfile: (userId: string) => void;\r\n  getStatus: (userId: string) => void;\r\n};\r\n\r\ntype PropsType = RouteComponentProps<RouteType> & ProfileMapStateToPropsType & ProfileMapDispatchToPropsType;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      // userId = \"5740\";\r\n      userId = this.props.authoraizedUserId;\r\n    }\r\n    this.props.getProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxState): ProfileMapStateToPropsType => ({\r\n  profile: state.profilePage.profile,\r\n  authoraizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, { setUserProfileCreator, getProfile, getStatus }),\r\n  withRouter,\r\n  AuthRedirectComponent\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport s from \"./Navbar.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <NavLink to=\"/profile\" activeClassName={s.activeLink}>\r\n        Профиль\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/users\" activeClassName={s.activeLink}>\r\n        Пользователи\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>\r\n        Сообщения\r\n      </NavLink>\r\n\r\n      <NavLink to=\"/news\" activeClassName={s.activeLink}>\r\n        News\r\n      </NavLink>\r\n\r\n      {/* <div className={s.item}>\r\n        <NavLink to=\"/music\" activeClassName={s.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to=\"/settings\" activeClassName={s.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect, useState } from \"react\";\r\nimport { ChangeEvent } from \"react\";\r\nimport s from \"../Header.module.css\";\r\n\r\ntype authPropsType = {\r\n  status: string;\r\n  setStatus: (status: string) => void;\r\n  updateStatus: (status: string) => void;\r\n};\r\n\r\nexport const Status = (props: authPropsType) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  console.log(props.status);\r\n\r\n  const onEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const offEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <span onDoubleClick={onEditMode} className={props.status === \"\" ? s.add_status : s.status_class}>\r\n          {props.status}\r\n        </span>\r\n      ) : (\r\n        <input onBlur={offEditMode} autoFocus value={status} onChange={onChangeStatus} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./Header.module.css\";\r\nimport Navbar from \"../NavBar/Navbar\";\r\nimport { ProfileResponseType } from \"../../redux/profilePageReducer\";\r\nimport defaultAvatar from \"../../assets/images/ava.jpg\";\r\nimport { Status } from \"./Status/Status\";\r\n\r\ntype authPropsType = {\r\n  login: string | null;\r\n  isAuth: boolean;\r\n  profile: ProfileResponseType | null;\r\n  status: string;\r\n  setStatus: (status: string) => void;\r\n  updateStatus: (status: string) => void;\r\n  logout: () => void;\r\n};\r\n\r\nconst Header = (props: authPropsType) => {\r\n  return (\r\n    <div className={s.header_wrap}>\r\n      <header className={s.header}>\r\n        <div className={s.ava_wrap}>\r\n          <div className={s.ava}>\r\n            <img src={props.profile?.photos.large ? props.profile?.photos.large : defaultAvatar} />\r\n          </div>\r\n          <h3>{props.profile?.fullName}</h3>\r\n          <p>{props.profile?.aboutMe}</p>\r\n          <Status status={props.status} setStatus={props.setStatus} updateStatus={props.updateStatus} />\r\n        </div>\r\n\r\n        <Navbar />\r\n        <div className={s.loginBlock}>\r\n          {props.isAuth ? (\r\n            <div>\r\n              {\"Привет, \" + props.login + \"!\"}\r\n              <button onClick={props.logout} className={s.logoutBtn}>\r\n                logOut\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <NavLink to={\"/login\"} className={s.login}>\r\n              Login\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst initialState: initialStateSetUserType = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n};\r\n\r\nexport type initialStateSetUserType = {\r\n  id: number | null;\r\n  email: string | null;\r\n  login: string | null;\r\n  isAuth: boolean;\r\n};\r\n\r\nexport const authReducer = (state: initialStateSetUserType = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype ActionsType = ReturnType<typeof setAuthUserData>;\r\n\r\nexport const setAuthUserData = (payload: initialStateSetUserType) => {\r\n  return {\r\n    type: \"SET_USER_DATA\",\r\n    payload,\r\n  } as const;\r\n};\r\n\r\nexport const authThunk = () => (dispatch: any) => {\r\n  authAPI.getAuth().then((res) => {\r\n    if (res.data.resultCode === 0) {\r\n      let { id, email, login } = res.data.data;\r\n      dispatch(setAuthUserData({ id, email, login, isAuth: true }));\r\n    }\r\n  });\r\n};\r\n\r\nexport const loginThunk = (email: string, password: string, rememberMe: boolean) => (dispatch: any) => {\r\n  authAPI.logIn(email, password, rememberMe).then((data) => {\r\n    if (data.resultCode === 0) {\r\n      dispatch(authThunk());\r\n    } else {\r\n      const message = data.messages.length > 0 ? data.messages[0] : \"some error\";\r\n      dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n  });\r\n};\r\n\r\nexport const logoutThunk = () => (dispatch: any) => {\r\n  authAPI.logOut().then((data) => {\r\n    if (data.resultCode === 0) {\r\n      dispatch(setAuthUserData({ id: null, email: null, login: null, isAuth: false }));\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport { connect } from \"react-redux\";\r\nimport { initialStateSetUserType, setAuthUserData } from \"../../redux/authReducer\";\r\nimport { RootReduxState } from \"../../redux/store\";\r\nimport { ProfileResponseType, setStatus, updateStatus } from \"../../redux/profilePageReducer\";\r\nimport { logoutThunk } from \"./../../redux/authReducer\";\r\n\r\ntype mapStateToPropsType = {\r\n  login: string | null;\r\n  isAuth: boolean;\r\n  profile: ProfileResponseType | null;\r\n  status: string;\r\n};\r\n\r\ntype mapDispatchType = {\r\n  // setAuthUserData: (payload: initialStateSetUserType) => void;\r\n  setStatus: (status: string) => void;\r\n  // authThunk: () => void;\r\n  updateStatus: (status: string) => void;\r\n  logoutThunk: () => void;\r\n};\r\n\r\ntype PropsType = mapStateToPropsType & mapDispatchType;\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n  render() {\r\n    return (\r\n      <Header\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        logout={this.props.logoutThunk}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxState): mapStateToPropsType => ({\r\n  login: state.auth.login,\r\n  isAuth: state.auth.isAuth,\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setStatus, updateStatus, logoutThunk })(HeaderContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { loginThunk } from \"../../redux/authReducer\";\r\nimport { RootReduxState } from \"../../redux/store\";\r\nimport { Input } from \"../../utils/validate/Validate\";\r\nimport { maxLength, required } from \"../../utils/validate/validators\";\r\nimport s from \"./Login.module.css\";\r\n\r\nconst maxSymbols = maxLength(100);\r\n\r\nconst Login = (props: any) => {\r\n  const onSubmit = (formData: any) => {\r\n    props.loginThunk(formData.login, formData.pass, formData.rememberMe);\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />;\r\n  }\r\n\r\n  return (\r\n    <div className={s.login_container}>\r\n      <LoginFormRedux onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LoginForm = (props: any) => {\r\n  return (\r\n    <form className={props.error ? s.form_error + \" \" + s.form : s.form} onSubmit={props.handleSubmit}>\r\n      <h1>Login</h1>\r\n      <div>\r\n        <Field name='login' component={Input} validate={[required, maxSymbols]} type='text' />\r\n      </div>\r\n      <div>\r\n        <Field name='pass' component={Input} validate={[required, maxSymbols]} type='password' />\r\n      </div>\r\n      <div>\r\n        <Field name='rememberMe' component='input' type='checkbox' />\r\n        remember me\r\n      </div>\r\n      {props.error && <p className={s.common_error}>{props.error}</p>}\r\n      <button>Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginFormRedux = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nconst mapStateToprops = (state: RootReduxState) => ({\r\n  //@ts-ignore\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToprops, { loginThunk })(Login);\r\n","import { authAPI } from \"../api/api\";\r\nimport { authThunk } from \"./authReducer\";\r\n\r\nconst initialState: initialStateSetUserType = {\r\n  initialazed: false,\r\n};\r\n\r\nexport type initialStateSetUserType = {\r\n  initialazed: boolean;\r\n};\r\n\r\nexport const appReducer = (state: initialStateSetUserType = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    case \"INITIALAZED-SUCSSES\": {\r\n      return {\r\n        ...state,\r\n        initialazed: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype ActionsType = ReturnType<typeof isInitialazedSusses>;\r\n\r\nexport const isInitialazedSusses = () => {\r\n  return {\r\n    type: \"INITIALAZED-SUCSSES\",\r\n  } as const;\r\n};\r\n\r\nexport const initialazedThunk = () => (dispatch: any) => {\r\n  const promise = dispatch(authThunk());\r\n  Promise.all([promise]).then(() => dispatch(isInitialazedSusses()));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { initialazedThunk } from \"./redux/appReduce\";\r\nimport { RootReduxState } from \"./redux/store\";\r\nimport { compose } from \"redux\";\r\nimport { Preloader } from \"./components/common/Preloader/Preloader\";\r\n\r\ntype PropsType = mapStateToPropsType & mapDispatchType;\r\ntype mapStateToPropsType = {\r\n  initialazed: boolean;\r\n};\r\ntype mapDispatchType = {\r\n  initialazedThunk: () => void;\r\n};\r\n\r\nclass App extends Component<PropsType> {\r\n  componentDidMount() {\r\n    this.props.initialazedThunk();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialazed) {\r\n      return <Preloader />;\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <div className='app-wrapper-content'>\r\n          <Route path='/dialogs' render={() => <DialogsContainer />} />\r\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\r\n          <Route path='/users' render={() => <UsersContainer />} />\r\n          <Route path='/login' render={() => <Login />} />\r\n          <Route path='/news' component={News} />\r\n          <Route path='/music' component={Music} />\r\n          <Route path='/settings' component={Settings} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootReduxState): mapStateToPropsType => ({\r\n  initialazed: state.app.initialazed,\r\n});\r\nexport default compose<React.ComponentType>(withRouter, connect(mapStateToProps, { initialazedThunk }))(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { profilePageReducer } from \"./profilePageReducer\";\r\nimport { usersPageReducer } from \"./usersPageReducer\";\r\nimport { dialogsPageReducer } from \"./dialogsPageReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport thunk from \"redux-thunk\";\r\nimport { appReducer } from \"./appReduce\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profilePageReducer,\r\n  dialogsPage: dialogsPageReducer,\r\n  usersPage: usersPageReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\n\r\nexport type RootReduxState = ReturnType<typeof reducers>;\r\n\r\nexport let store = createStore(reducers, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__ojJuw\",\"add_post\":\"MyPosts_add_post__obRAk\",\"form\":\"MyPosts_form__2_XYu\",\"textarea_wrap\":\"MyPosts_textarea_wrap__3mxWA\",\"posts\":\"MyPosts_posts__PfHOK\",\"btn\":\"MyPosts_btn__2r11h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrap\":\"Post_post_wrap__-oKkA\",\"imgWrapper\":\"Post_imgWrapper__34qw7\",\"titles\":\"Post_titles__1avdb\",\"post_header\":\"Post_post_header__2_Hz6\",\"likes\":\"Post_likes__1boPN\",\"messageContent\":\"Post_messageContent__3aWxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__sv-di\",\"activeLink\":\"Navbar_activeLink__pT6l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"Login_login_container__1FW-A\",\"form\":\"Login_form__3wvaO\",\"form_error\":\"Login_form_error__3fZ_F\",\"common_error\":\"Login_common_error__326WA\"};"],"sourceRoot":""}